<!DOCTYPE html>
<html>
<head>
    <title>Pong Game</title>
    <style>
        body { margin: 0; }
        canvas { background: black; display: block; margin: auto; }
    </style>
</head>
<body>
    <canvas id="pongCanvas" width="800" height="400"></canvas>
    <script>
        const canvas = document.getElementById('pongCanvas');
        const ctx = canvas.getContext('2d');

        // Paddle
        const paddleWidth = 10, paddleHeight = 100;
        const paddleSpeed = 5;
        const paddle1 = { x: 0, y: canvas.height / 2 - paddleHeight / 2, width: paddleWidth, height: paddleHeight, dy: 0 };
        const paddle2 = { x: canvas.width - paddleWidth, y: canvas.height / 2 - paddleHeight / 2, width: paddleWidth, height: paddleHeight, dy: 0 };

        // Ball
        const ballSize = 10;
        const ball = { x: canvas.width / 2, y: canvas.height / 2, size: ballSize, dx: 4, dy: 4 };

        function drawPaddle(paddle) {
            ctx.fillStyle = 'white';
            ctx.fillRect(paddle.x, paddle.y, paddle.width, paddle.height);
        }

        function drawBall() {
            ctx.fillStyle = 'white';
            ctx.beginPath();
            ctx.arc(ball.x, ball.y, ball.size, 0, Math.PI * 2);
            ctx.fill();
        }

        function movePaddles() {
            if (paddle1.dy) paddle1.y += paddle1.dy;
            if (paddle2.dy) paddle2.y += paddle2.dy;

            // Ensure paddles stay within the canvas
            paddle1.y = Math.max(0, Math.min(canvas.height - paddleHeight, paddle1.y));
            paddle2.y = Math.max(0, Math.min(canvas.height - paddleHeight, paddle2.y));
        }

        function moveBall() {
            ball.x += ball.dx;
            ball.y += ball.dy;

            // Bounce off top and bottom walls
            if (ball.y - ball.size < 0 || ball.y + ball.size > canvas.height) ball.dy *= -1;

            // Bounce off paddles
            if (ball.x - ball.size < paddle1.x + paddle1.width && ball.y > paddle1.y && ball.y < paddle1.y + paddle1.height) ball.dx *= -1;
            if (ball.x + ball.size > paddle2.x && ball.y > paddle2.y && ball.y < paddle2.y + paddle2.height) ball.dx *= -1;

            // Reset ball if it goes past paddles
            if (ball.x - ball.size < 0 || ball.x + ball.size > canvas.width) {
                ball.x = canvas.width / 2;
                ball.y = canvas.height / 2;
                ball.dx = 4 * (Math.random() > 0.5 ? 1 : -1);
                ball.dy = 4 * (Math.random() > 0.5 ? 1 : -1);
            }
        }

        function update() {
            movePaddles();
            moveBall();

            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawPaddle(paddle1);
            drawPaddle(paddle2);
            drawBall();

            requestAnimationFrame(update);
        }

        document.addEventListener('keydown', (event) => {
            switch (event.key) {
                case 'w': paddle1.dy = -paddleSpeed; break;
                case 's': paddle1.dy = paddleSpeed; break;
                case 'ArrowUp': paddle2.dy = -paddleSpeed; break;
                case 'ArrowDown': paddle2.dy = paddleSpeed; break;
            }
        });

        document.addEventListener('keyup', (event) => {
            switch (event.key) {
                case 'w': case 's': paddle1.dy = 0; break;
                case 'ArrowUp': case 'ArrowDown': paddle2.dy = 0; break;
            }
        });

        update();
    </script>
</body>
</html>
